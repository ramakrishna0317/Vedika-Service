node{
stage('ansible installing'){
   sh label: '', script: '''#!/bin/bash
   echo this script done by rk
   echo Installing software-properties-common packages, then add the java OpenJDK PPA repository.
   sudo apt install software-properties-common apt-transport-https -y
   sudo add-apt-repository ppa:openjdk-r/ppa -y
   Now installing the Java 8 using apt command.
   sudo apt install openjdk-8-jdk -y
   echo java version installed on the system.
   java -version
   echo updating and upgrading the version
   sudo apt-get update -y
   sudo apt-get upgrade -y
   echo Ansible PPA to your server
   sudo apt-add-repository ppa:ansible/ansible \' \'
   echo update the repository and install Ansible
   sudo apt-get update -y
   sudo apt-get install ansible -y
   echo Ansible version
   sudo ansible --version'''
   }

stage('angular file saving'){
sh label: '', script: '''sudo chmod 777 /opt/
cd /opt
cat >angular.sh <<'EOF'
sudo apt -y install curl dirmngr apt-transport-https lsb-release ca-certificates
sudo curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
echo Install Node.js 12 on Ubuntu / Debian / Linux Mint
sudo apt -y install nodejs
sudo apt -y  install gcc g++ make
echo Confirm Node.js 12 installation by checking the version installed.
sudo node --version
sudo npm --version 
echo Install Angular on Ubuntu 18.04
sudo npm install -g @angular/cli@9   
cd /home/ubuntu
sudo git init
sudo git clone https://github.com/hussainaiah/vedikaUI/tree/vedika4
cd vedikaUI-angular
sudo npm install
sudo ng serve --host 0.0.0.0'''
}

stage('permissions to dir'){
   sh label: '', script: '''sudo chmod 777 /usr/
   sudo chmod 777 /usr/local/
   sudo chmod 777 /usr/local/bin/'''
   }

stage('permissions to dir systemd init'){
    sh label: '', script: '''sudo chmod 777 /etc/systemd/
    sudo chmod 777 /etc/systemd/system'''
   }

stage('Creating bash script to run angular'){   
     sh label: '', script: '''cd /usr/local/bin
     cat >vedikaui.sh <<'EOF'
SERVICE_NAME=vedikaui
PATH_TO_SH=/opt/angular.sh
PID_PATH_NAME=/tmp/vedikaui-pid
case $1 in
start)
       echo "Starting $SERVICE_NAME ..."
  if [ ! -f $PID_PATH_NAME ]; then
       nohup sh $PATH_TO_SH /tmp 2>> /dev/null >>/dev/null &
                   echo $! > $PID_PATH_NAME
       echo "$SERVICE_NAME started ..."
  else
       echo "$SERVICE_NAME is already running ..."
  fi
;;
stop)
  if [ -f $PID_PATH_NAME ]; then
         PID=$(cat $PID_PATH_NAME);
         echo "$SERVICE_NAME stoping ..."
         kill $PID;
         echo "$SERVICE_NAME stopped ..."
         rm $PID_PATH_NAME
  else
         echo "$SERVICE_NAME is not running ..."
  fi
;;
restart)
  if [ -f $PID_PATH_NAME ]; then
      PID=$(cat $PID_PATH_NAME);
      echo "$SERVICE_NAME stopping ...";
      kill $PID;
      echo "$SERVICE_NAME stopped ...";
      rm $PID_PATH_NAME
      echo "$SERVICE_NAME starting ..."
      nohup sh $PATH_TO_SH /tmp 2>> /dev/null >> /dev/null &
      echo $! > $PID_PATH_NAME
      echo "$SERVICE_NAME started ..."
  else
      echo "$SERVICE_NAME is not running ..."
     fi     ;;
 esac
 }
stage('Creating angular as a service'){ 
    sh label: '', script: '''cd /etc/systemd/system/
    cat >vedikaui.service <<'EOF'
[Unit]
 Description = Angular Service
 After network.target = vedikaui.service
[Service]
 Type = forking
 Restart=always
 RestartSec=1
 SuccessExitStatus=143
 ExecStart = /usr/local/bin/vedikaui.sh start
 ExecStop = /usr/local/bin/vedikaui.sh stop
 ExecReload = /usr/local/bin/vedikaui.sh reload
[Install]
 WantedBy=multi-user.target
}

stage('angularui playbook creation'){
sh label: '', script: '''cd /opt/
cat >vedikaui.yaml <<'EOF'
---
- 
  hosts: all
  tasks:
    -
      copy:
        src: /opt/angularui.sh
        dest: /home/ubuntu
	-
      copy:
        src: /usr/local/bin/vedikaui.sh
        dest: /usr/local/bin
	-
      copy:
        src: /etc/systemd/system/vedikaui.service
        dest: /etc/systemd/system/
    -
       shell: chmod +x /opt/angularui.sh
	-
       shell: chmod +x /usr/local/bin/vedikaui.sh
    -
       shell: sudo systemctl daemon-reload  
    -
       shell: sudo systemctl enable vedikaui 
    -
       shell: sudo systemctl start vedikaui
	}
	
	   stage('vedikaui playbook running'){
	   sh label: '', script: '''cd /opt
       sudo ansible-playbook vedikaui.yaml'''
       }
	}
